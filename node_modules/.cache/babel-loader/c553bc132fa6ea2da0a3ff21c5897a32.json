{"ast":null,"code":"var _jsxFileName = \"/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/5/webd171-5/src/App.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport 'moment-timezone';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeatherData = () => {\n      const API = 'https://mm214.com/demo.php/';\n      fetch(API).then(res => res.json()).then(result => {\n        console.log(result);\n        const {\n          lon,\n          lat\n        } = result.coord;\n        const {\n          main,\n          description,\n          icon\n        } = result.weather[0];\n        const {\n          temp,\n          temp_min,\n          temp_max,\n          feels_like,\n          humidity\n        } = result.main;\n        const {\n          speed,\n          deg\n        } = result.wind;\n        const {\n          country,\n          sunrise,\n          sunset\n        } = result.sys;\n        const {\n          name\n        } = result;\n\n        var geoTz = require('geo-tz');\n\n        var timezone = JSON.stringify(geoTz(lat, lon));\n\n        var moment = require('moment-timezone');\n\n        moment.tz.setDefault(timezone);\n        const date = moment().format('MMMM Do, YYYY');\n        const time = moment().format('h:mm a');\n        const WindDirection = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n\n        const degreesDirection = degrees => {\n          const value = Math.floor(degrees / 22.5 + 0.5);\n          return WindDirection[value % 16];\n        };\n\n        this.setState({\n          isLoaded: true,\n          data: {\n            name,\n            country,\n            sunrise: moment.unix(sunrise).format('h:mm a'),\n            sunset: moment.unix(sunset).format('h:mm a'),\n            speed: (speed / 1.609344).toFixed(0),\n            deg,\n            temp: ((temp - 273.15) * 1.8 + 32).toFixed(1),\n            temp_min: ((temp_min - 273.15) * 1.8 + 32).toFixed(1),\n            temp_max: ((temp_max - 273.15) * 1.8 + 32).toFixed(1),\n            feels_like: ((feels_like - 273.15) * 1.8 + 32).toFixed(0),\n            humidity,\n            main,\n            description,\n            icon: 'https://openweathermap.org/img/wn/' + icon + '@2x.png',\n            lon,\n            lat,\n            timezone,\n            date,\n            time,\n            degreesDirection\n          }\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          errorMessage: error.message\n        });\n      });\n    };\n\n    this.state = {\n      data: null,\n      isLoaded: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getWeatherData();\n  }\n\n  render() {\n    const {\n      errorMessage,\n      isLoaded,\n      data\n    } = this.state;\n\n    if (errorMessage) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weatherApp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"html\", {\n        lang: \"en\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, \"Weather Data App\"), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"description\",\n        content: \"View the weather!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Container, {\n        className: \"p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"pt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \" Error: \", errorMessage, \" \")))));\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weatherApp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"html\", {\n        lang: \"en\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, \"Weather Data App\"), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"description\",\n        content: \"View the weather!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Container, {\n        className: \"p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"pt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }, \" Loading... \")))));\n    } else {\n      const {\n        name,\n        country,\n        sunrise,\n        sunset,\n        speed,\n        deg,\n        temp,\n        temp_min,\n        temp_max,\n        feels_like,\n        humidity,\n        main,\n        description,\n        icon,\n        lon,\n        lat,\n        timezone,\n        date,\n        time,\n        degreesDirection\n      } = data;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weatherApp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"html\", {\n        lang: \"en\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, \"Weather Data App\"), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"description\",\n        content: \"View the weather!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        className: \"py-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, \"View the weather!\"))))), /*#__PURE__*/React.createElement(\"main\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"weather-main pt-4 pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"d-flex justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        className: \"pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weather-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"h2 pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 23\n        }\n      }, time), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }\n      }, date), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }\n      }, \"Sunrise: \", sunrise, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 47\n        }\n      }), \" Sunset: \", sunset)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weather-coord\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 23\n        }\n      }, \"Coordinates: \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 39\n        }\n      }), \" \", lat, \", \", lon))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        className: \"pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, name, \", \", country), /*#__PURE__*/React.createElement(\"img\", {\n        src: icon,\n        alt: \"weather icon { description }\",\n        className: \"weather-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, \" \", description, \" \")), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"temp-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"h2 temperature pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }\n      }, \" \", temp, \"\\xB0F \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }\n      }, \" Feels like \", feels_like, \"\\xB0F \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }, \"H \", temp_max, \"\\xB0F \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 43\n        }\n      }), \" L \", temp_min, \"\\xB0F\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"weather-prop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 23\n        }\n      }, \" Wind: \", degreesDirection(deg), \", \", speed, \" mph\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }\n      }), \" Humidity: \", humidity, \"% \")))))), /*#__PURE__*/React.createElement(\"footer\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, \"You are viewing the weather in the following time zone: \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, timezone, \".\"))))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ianstrand/Sites/strandian/strand/SDCCD/webd171/lessons/5/webd171-5/src/App.js"],"names":["React","Container","Row","Col","Helmet","App","Component","constructor","props","getWeatherData","API","fetch","then","res","json","result","console","log","lon","lat","coord","main","description","icon","weather","temp","temp_min","temp_max","feels_like","humidity","speed","deg","wind","country","sunrise","sunset","sys","name","geoTz","require","timezone","JSON","stringify","moment","tz","setDefault","date","format","time","WindDirection","degreesDirection","degrees","value","Math","floor","setState","isLoaded","data","unix","toFixed","error","errorMessage","message","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {Helmet} from 'react-helmet';\nimport 'moment-timezone';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      isLoaded: false,\n      errorMessage: ''\n    };\n  }\n\n  getWeatherData = () => {\n    const API = 'https://mm214.com/demo.php/';\n\n    fetch(API)\n      .then(res => res.json())\n      .then(\n        (result) => {\n\n            console.log(result);\n\n            const { lon, lat } = result.coord;\n            const { main, description, icon } = result.weather[0];\n            const { temp, temp_min, temp_max, feels_like, humidity } = result.main;\n            const { speed, deg } = result.wind;\n            const { country, sunrise, sunset } = result.sys;\n            const { name } = result;\n\n            var geoTz = require('geo-tz');\n            var timezone = JSON.stringify(geoTz(lat, lon));\n\n            var moment = require('moment-timezone');\n            moment.tz.setDefault(timezone);\n\n            const date = moment().format('MMMM Do, YYYY');\n            const time = moment().format('h:mm a');\n\n            const WindDirection = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n            const degreesDirection = (degrees) => {\n              const value = Math.floor((degrees / 22.5) + 0.5);\n              return WindDirection[value % 16];\n            };\n\n          this.setState({\n            isLoaded: true,\n            data: {\n              name,\n              country,\n              sunrise: moment.unix(sunrise).format('h:mm a'),\n              sunset: moment.unix(sunset).format('h:mm a'),\n              speed: (speed / 1.609344).toFixed(0),\n              deg,\n              temp: (((temp - 273.15) * 1.8) + 32).toFixed(1),\n              temp_min: (((temp_min - 273.15) * 1.8) + 32).toFixed(1),\n              temp_max: (((temp_max - 273.15) * 1.8) + 32).toFixed(1),\n              feels_like: (((feels_like - 273.15) * 1.8) + 32).toFixed(0),\n              humidity,\n              main,\n              description,\n              icon: 'https://openweathermap.org/img/wn/' + icon + '@2x.png',\n              lon,\n              lat,\n              timezone,\n              date,\n              time,\n              degreesDirection,\n            }\n          });\n\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            errorMessage: error.message\n          });\n        }\n      );\n  }\n\n  componentDidMount() {\n    this.getWeatherData();\n  }\n\n  render() {\n    const { errorMessage, isLoaded, data } = this.state;\n\n    if (errorMessage) {\n      return (\n        <div className='weatherApp'>\n        <Helmet>\n          <html lang='en' />\n          <title>Weather Data App</title>\n          <meta name='description' content='View the weather!'/>\n        </Helmet>\n        <Container className = 'p-5'>\n          <Row>\n            <Col className = 'pt-4'>\n              <h1 className = 'error' > Error: { errorMessage } </h1>\n            </Col>\n          </Row>\n        </Container>\n        </div>\n      );\n    } else if (!isLoaded) {\n      return (\n        <div className='weatherApp'>\n        <Helmet>\n          <html lang='en' />\n          <title>Weather Data App</title>\n          <meta name='description' content='View the weather!'/>\n        </Helmet>\n        <Container className = 'p-5'>\n          <Row>\n            <Col className = 'pt-4'>\n              <h1> Loading... </h1>\n            </Col>\n          </Row>\n        </Container>\n        </div>\n      );\n    } else {\n\n       const { name, country, sunrise, sunset, speed, deg, temp, temp_min, temp_max, feels_like, humidity, main, description, icon, lon, lat, timezone, date, time, degreesDirection } = data;\n\n       return (\n          <div className='weatherApp'>\n            <Helmet>\n              <html lang='en' />\n              <title>Weather Data App</title>\n              <meta name='description' content='View the weather!' />\n            </Helmet>\n            <Row className = 'py-4'>\n              <Col>\n                <header>\n                  <Container>\n                    <h1>View the weather!</h1>\n                  </Container>\n                </header>\n              </Col>\n            </Row>\n            <main>\n              <Container className = 'weather-main pt-4 pb-5'>\n                <Row className = 'd-flex justify-content-md-center'>\n                  <Col md={4} className='pb-5'>\n                    <div className = 'weather-date'>\n                      <h3 className = 'h2 pb-4'>{ time }</h3>\n                      <p>{ date }</p>\n                      <p>Sunrise: { sunrise } <br /> Sunset: { sunset }</p>\n                    </div>\n                    <div className = 'weather-coord'>\n                      <p>Coordinates: <br /> { lat }, { lon }</p>\n                    </div>\n                  </Col>\n                  <Col md={4} className='pb-5'>\n                    <h3 className = 'h2'>{ name }, { country }</h3>\n                    <img src = { icon } alt = 'weather icon { description }' className = 'weather-icon' />\n                    <h2 className = 'description'> { description } </h2>\n                  </Col>\n                  <Col md={4}>\n                    <div className = 'temp-main'>\n                      <h3 className = 'h2 temperature pb-4'> { temp }°F </h3>\n                      <p> Feels like { feels_like }°F </p>\n                      <p>H { temp_max }°F <br /> L { temp_min }°F</p>\n                    </div>\n                    <div className = 'weather-prop'>\n                      <p> Wind: { degreesDirection(deg) }, { speed } mph\n                      <br /> Humidity: { humidity }% </p>\n                    </div>\n                  </Col>\n                </Row>\n              </Container>\n            </main>\n            <footer>\n              <Container className = 'mt-3'>\n                <Row>\n                  <Col>\n                    <p>You are viewing the weather in the following time zone: < /p>\n                    <p>{ timezone }.< /p>\n                  </Col>\n                </Row>\n              </Container>\n            </footer>\n          </div>\n        );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}